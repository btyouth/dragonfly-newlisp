<% (display-partial "doctype") %>
<% (display-partial "header") %>

<body>

<div id="wrap">
	<div id="header">
		<% (display-partial "navigation") %>	
		<div class="clear"></div>
	</div>

	<div id="content">
				
		<div class="title nomargin">
			<p><% (title "| Dragonfly web framework") %><p>
		</div>
		
		<h1>Default Routes</h1>
		<p class="extract">
		
		</p>
		
		<h2>Static Routes</h2>
		<p>Static Routes in Dragonfly provide two behaviours:</p>
		<ul>
			<li>1a) example-site.com/somefile.html</li>
			<li>1b) example-site.com/foo/</li>
		</ul>
		
		<h3 class="code">1a. example-site.com/somefile.html</h3>
		<p>If somefile.html is an actual file, but the default configuration is set to filter that through the Route.Static that reads in the file and passes it through the template evaluator and then displays it.
		</p>
		<p class="config"><b>Configuration</b><br/>You may change the constant STATIC_EXTENSION in config.lsp to whatever You want. Default is set to ".html".</p>

		<h3 class="code">1b. example-site.com/foo/</h3>
		<p>If "foo" is a folder, then it will be searched for an index file by default. In the config.lsp, the STATIC_TEST_EXTENSIONS is set to ".html". So it will search for an "index.html" inside of the foo folder. If it exists it will pass it through the template evaluator and displays it.
		</p>
		<p class="config"><b>Configuration</b><br/>You may change the constant STATIC_TEST_EXTENSIONS in config.lsp to whatever You want. Default is set to ".html".</p>
		
		
		<h2>RESTful Routes</h2>
		<p class="extract">Dragonfly supports RESTful resources. This way it's flexible against any kind of request to Your application.</p>
		<p>When your Dragonfly application receives an incoming HTTP request, say
		
		<p class="code">GET /wings/show</p>
		<p>
		the <b>LISTENER</b> within Dragonfly is the piece of code that dispatches the request to the appropriate spot in your application. In this case, the application would most likely end up running the <b>SHOW</b> action within the <b>WINGS</b> resource, displaying the WINGS.</p>

		<p class="info">The resource <b>WINGS</b> has to be available in Your resource directory</p>
		<h3 class="code">Example of wings.lsp in /resources</h3>
		<pre class="code">
;; @author Greg Slepak

(DF:activate-plugin "artfulcode/json")

(context 'Resource.Wings)

(set 'my-data
	'((wings (left right))
	(wings-condition ("good" "excellent"))
	(wings-opacity 0.5))
)

(define (Resource.Wings:Resource.Wings response-format)
	; defaults to calling show
	(show response-format)
)

(define (show response-format)
	(if (= response-format "json")
		(begin
			(Response:content-type Response:json-type)
			(print (Json:lisp->json my-data))
		)
		(begin
			(Response:content-type Response:text-type)
			(print my-data)
		)
	)
)

(context MAIN)			
		</pre>
		<p class="config"><b>Configuration</b><br/>You may enable or disable RESTful handling by setting the constant ENABLE_RESTFUL_HANDLER in config.lsp. Default is set to "true".</p>

		<p class="config"><b>Configuration</b><br/>Set Your resource directory to whatever You want by changing the constant RESOURCES_PATH in config.lsp. Default is set to "/resources".</p>	
		
		
		<h2>Using views</h2>
		<p class="extract">A view is simply a web page, or a page fragment, like a header or footer. In fact, views can flexibly be embedded within other views. In that case we call them partials.</p>

		<h3 class="code">How to load a view</h3>
		<p>Example: open Your favorite text-editor and enter the following:</p>
		<pre class="code">Hello World</pre>
		<p>Save the file as "hello" into Your views directory. Now open Your browser and navigate to <a href="http://www.example-site.com/hello">example-site.com/hello</a>. That's it!</p>
		<p class="info"><b>Information</b><br/>You can put nearly everything into views: (X)HTML, Javascript, newLISP code.</p>
		<p class="config"><b>Configuration</b><br/>If VIEW_EXTENSION is ".html" for example, then when example-site.com/hello is called Dragonfly will search for a "hello.html" file in the PAGES_PATH. It also applies to the partials, too.</p>

		<h3 class="code">How to call functions inside a view</h3>
		<pre class="code">&lt;% (benchmark-result) %&gt;</pre>
		
		<p>Put Your function call inside our open and close brackets and there You go! That will display some stats about rendering time and memory consumption.</p>
		
		<p class="info"><b>Information</b><br/>You can use all functions from newLISP and Dragonfly. Additionally You may write Your own functions inside a plugin and just put the file into the "plugins-active" directory.</p>
				
		<h3 class="code">How to load a partial view</h3>
		<pre class="code">&lt;% (display-partial "header") %&gt;</pre>
		
		<p>This simple argument would load the "header"-partial from the partials directory.</p>

		
		<div class="line-dotted"></div>

		<% (benchmark-result) %>
		
		<div class="line-dotted"></div>
		
		
	</div><!-- END CONTENT -->
	
</div><!-- END WRAP -->
<% (display-partial "footer") %>

